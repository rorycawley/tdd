name: C# CI/CD

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  release:
    types: [published]

jobs:
  # The CI (build and test) will run for every pull request.
  # After building and testing, it publishes the application and uploads the build artifacts.
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x' # Adjust this to your project's .NET version

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Run tests
        run: dotnet test --no-build

      - name: Publish
        run: dotnet publish --configuration Release --output ./publish

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: myapp
          path: ./publish/

  # The DEV deployment is triggered by pull requests.
  # DEV Deployment on Pull Request: By deploying to the DEV environment upon a pull request,
  # you can test and validate changes before they're merged into the main branch.
  # This provides developers with immediate feedback on their changes in an isolated environment.
  deploy-dev:
    needs: build
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: myapp

      - name: Deploy to DEV
        run: |
          ls ${{ github.workspace }}

  # The QA deployment is triggered by pushes to the main branch (i.e., when pull requests are merged).
  # QA Deployment on Push to Main: Once the pull request is reviewed and approved, it's merged into the main branch.
  # Deploying to QA upon this merge ensures that the QA environment always reflects the latest approved and merged changes.
  # This environment can be used for more rigorous testing, user acceptance testing, or other validation processes.
  deploy-qa:
    needs: deploy-dev
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: myapp

      - name: Deploy to QA
        run: |
          ls ${{ github.workspace }}

  # The PROD deployment is manually triggered by publishing a GitHub release.
  # CD - PROD Deployment: This job is triggered when a new release is published on GitHub.
  # It deploys the version associated with the release to the PROD environment.
  deploy-prod:
    needs: deploy-qa
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: myapp

      - name: Deploy to PROD
        run: |
          ls ${{ github.workspace }}
